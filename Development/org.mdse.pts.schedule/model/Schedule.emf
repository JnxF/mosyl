@namespace(uri="http://mdse.org/pts/schedule", prefix="schedule")
package schedule;

import "platform:/resource/org.mdse.pts.network/model/Network.ecore";
import "platform:/resource/org.mdse.pts.depot/model/Depot.ecore";

class Schedule {
	ref network.Network[1] network;
	ref depot.Depot[1..*] depots;
	val TrainSchedule[*] trainSchedules;
}

class TrainSchedule {
	ref depot.Train train;
	val TimeDescription[1] timeDescription;
	val Route[1] route;
}

class TimeDescription {
	val DateTime[1..*] dateTimes;
}
	
class DateTime {		
	attr WeekDays[1..*] weekday;
	val Time[1] time;
}
	
enum WeekDays {
	MONDAY = 1;
	TUESDAY = 2;
	WEDNESDAY = 3;
	THURSDAY = 4;
	FRIDAY = 5;
	SATURDAY = 6;
	SUNDAY = 7;
}

class Time {
	attr Integer hours;
	attr Integer minutes;
}

class Route {
	val Spot[2..*] spots;
}


class Spot {
	ref network.Station[1] station;
	attr String[?] platform;
	attr Integer[1] waitingTime = 0;
	attr Boolean[1] turnStation = false; // TODO: last one cannot have a turn
	ref network.Leg[?] leg; // TODO: last one cannot have leg
}