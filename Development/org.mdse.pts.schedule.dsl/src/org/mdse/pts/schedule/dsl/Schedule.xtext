grammar org.mdse.pts.schedule.dsl.Schedule hidden(WS, ML_COMMENT, SL_COMMENT)

import "http://mdse.org/pts/network" as network
import "http://mdse.org/pts/depot" as depot
import "http://mdse.org/pts/shared" as shared
import "http://mdse.org/pts/schedule"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Schedule returns Schedule:
	"schedule" "for" network=[network::Network] "with" depots+=[depot::Depot] ("," depots+=[depot::Depot])*  ":"
	(trainSchedules+=TrainSchedule)*
; 

TrainSchedule returns TrainSchedule:
	"train" train=[depot::Train]
	"on" timeDescription=TimeDescription ":"
	route=Route
;

TimeDescription returns TimeDescription:
	dateTimes+=DateTime (("," dateTimes+=DateTime)* "and" dateTimes+=DateTime)?
;

DateTime returns DateTime:
	weekdays+=WeekDay ("," weekdays+=WeekDay)*
	"at" time=Time 
;

Time returns shared::Time:
	hours=INT ":" minutes=INT
;

Route returns Route:
	spots+=StartSpot
	(spots+=MiddleSpot)*
	spots+=FinalSpot
;

StartSpot returns Spot:
	"start" "at" station=[network::Station] ("on" "platform" platform=STRING)?
	("drive" "via" leg=[network::Leg])?
;

MiddleSpot returns Spot:
	"stop" "at" station=[network::Station] ("on" "platform" platform=STRING)?
	"for" waitingTime=INT "min" ("and" turnStation?="turn")?
	("drive" "via" leg=[network::Leg])? 
;

FinalSpot returns Spot:
	"terminate" "at" station=[network::Station] "on" "platform" platform=STRING
;

enum WeekDay returns shared::DaysOfTheWeek:
	MONDAY="Monday" | TUESDAY="Tuesday" | WEDNESDAY="Wednesday" | THURSDAY="Thursday" |
	FRIDAY="Friday" | SATURDAY="Saturday" | SUNDAY="Sunday"
;

terminal fragment LETTER:
	('a'..'z' | 'A'..'Z')
;

terminal fragment DIGIT:
	('0'..'9')
;

terminal ID:
	'^'?('_' | LETTER) ('_' | LETTER | DIGIT )*
;

terminal INT returns ecore::EInt:
	DIGIT+
;

terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;

terminal ML_COMMENT:
	'/*' -> '*/'
;

terminal SL_COMMENT:
	'//' !('\n'|'\r')* ('\r'? '\n')?
;

terminal WS:
	(' '|'\t'|'\r'|'\n')+
;
